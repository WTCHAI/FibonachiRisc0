/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  FibonachiVerifier,
  FibonachiVerifierInterface,
} from "../FibonachiVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prover",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ProofSubmittedLogged",
    type: "event",
  },
  {
    inputs: [],
    name: "getFinalizeFibonachiResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "imageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IRiscZeroVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "seal",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "journal",
        type: "bytes",
      },
    ],
    name: "verifyAndFinalizeFibonachi",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040527f1643c9c24b16f05f541abcff1ddae52514fab31304f75ac2923156b84533d0b960001b60a09081525034801561003a57600080fd5b50604051610851380380610851833981810160405281019061005c91906100f9565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610126565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100c68261009b565b9050919050565b6100d6816100bb565b81146100e157600080fd5b50565b6000815190506100f3816100cd565b92915050565b60006020828403121561010f5761010e610096565b5b600061011d848285016100e4565b91505092915050565b60805160a0516106f86101596000396000818161015d01526102d101526000818161011f01526102a401526106f86000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312bcc443146100515780632b7ac3f31461006d5780637abdf2de1461008b578063ef3f7dd5146100a9575b600080fd5b61006b60048036038101906100669190610362565b6100c7565b005b6100756102a2565b6040516100829190610462565b60405180910390f35b6100936102c6565b6040516100a09190610496565b60405180910390f35b6100b16102cf565b6040516100be91906104ca565b60405180910390f35b6000600283836040516100db929190610524565b602060405180830381855afa1580156100f8573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061011b9190610569565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ab750e7586867f0000000000000000000000000000000000000000000000000000000000000000856040518563ffffffff1660e01b815260040161019c94939291906105e5565b60006040518083038186803b1580156101b457600080fd5b505afa9250505080156101c5575060015b61021f573373ffffffffffffffffffffffffffffffffffffffff167fb85d4f2f3447598942f506a1e6ee2374a91c07d605af52f58a735adefcb18d4f426000604051610212929190610640565b60405180910390a2610286565b828281019061022e9190610695565b6000819055503373ffffffffffffffffffffffffffffffffffffffff167fb85d4f2f3447598942f506a1e6ee2374a91c07d605af52f58a735adefcb18d4f42600160405161027d929190610640565b60405180910390a25b82828101906102959190610695565b6000819055505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610322576103216102fd565b5b8235905067ffffffffffffffff81111561033f5761033e610302565b5b60208301915083600182028301111561035b5761035a610307565b5b9250929050565b6000806000806040858703121561037c5761037b6102f3565b5b600085013567ffffffffffffffff81111561039a576103996102f8565b5b6103a68782880161030c565b9450945050602085013567ffffffffffffffff8111156103c9576103c86102f8565b5b6103d58782880161030c565b925092505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061042861042361041e846103e3565b610403565b6103e3565b9050919050565b600061043a8261040d565b9050919050565b600061044c8261042f565b9050919050565b61045c81610441565b82525050565b60006020820190506104776000830184610453565b92915050565b6000819050919050565b6104908161047d565b82525050565b60006020820190506104ab6000830184610487565b92915050565b6000819050919050565b6104c4816104b1565b82525050565b60006020820190506104df60008301846104bb565b92915050565b600081905092915050565b82818337600083830152505050565b600061050b83856104e5565b93506105188385846104f0565b82840190509392505050565b60006105318284866104ff565b91508190509392505050565b610546816104b1565b811461055157600080fd5b50565b6000815190506105638161053d565b92915050565b60006020828403121561057f5761057e6102f3565b5b600061058d84828501610554565b91505092915050565b600082825260208201905092915050565b6000601f19601f8301169050919050565b60006105c48385610596565b93506105d18385846104f0565b6105da836105a7565b840190509392505050565b600060608201905081810360008301526106008186886105b8565b905061060f60208301856104bb565b61061c60408301846104bb565b95945050505050565b60008115159050919050565b61063a81610625565b82525050565b60006040820190506106556000830185610487565b6106626020830184610631565b9392505050565b6106728161047d565b811461067d57600080fd5b50565b60008135905061068f81610669565b92915050565b6000602082840312156106ab576106aa6102f3565b5b60006106b984828501610680565b9150509291505056fea26469706673582212204f19b713a3d51148993811839f0462add8cef373b2f338e1be8016f14ee091b064736f6c634300081b0033";

type FibonachiVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FibonachiVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FibonachiVerifier__factory extends ContractFactory {
  constructor(...args: FibonachiVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    verifierAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(verifierAddress, overrides || {});
  }
  override deploy(
    verifierAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(verifierAddress, overrides || {}) as Promise<
      FibonachiVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FibonachiVerifier__factory {
    return super.connect(runner) as FibonachiVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FibonachiVerifierInterface {
    return new Interface(_abi) as FibonachiVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FibonachiVerifier {
    return new Contract(address, _abi, runner) as unknown as FibonachiVerifier;
  }
}
