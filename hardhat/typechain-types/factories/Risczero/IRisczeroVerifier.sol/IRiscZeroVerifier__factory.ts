/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRiscZeroVerifier,
  IRiscZeroVerifierInterface,
} from "../../../Risczero/IRisczeroVerifier.sol/IRiscZeroVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "seal",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "journalDigest",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "seal",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "claimDigest",
            type: "bytes32",
          },
        ],
        internalType: "struct Receipt",
        name: "receipt",
        type: "tuple",
      },
    ],
    name: "verifyIntegrity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRiscZeroVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IRiscZeroVerifierInterface {
    return new Interface(_abi) as IRiscZeroVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRiscZeroVerifier {
    return new Contract(address, _abi, runner) as unknown as IRiscZeroVerifier;
  }
}
